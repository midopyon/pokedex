{"version":3,"sources":["services/pokemons.js","components/PokemonCard.js","components/Header.js","containers/AllPokemon.js","components/Pokemon.js","services/pokemon.js","App.js","reportWebVitals.js","index.js"],"names":["URL","getMorePokemons","offset","fetch","then","response","json","PokemonCard","props","className","to","pathname","name","src","id","alt","Header","AllPokemon","useState","pokemons","setPokemons","count","setCount","useEffect","data","Object","entries","map","pokemon","index","onClick","prevCount","Pokemon","location","useLocation","currPokemon","setCurrPokemon","height","base_experience","weight","abilities","ability","stats","stat","base_stat","types","type","App","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77c104c7.chunk.js","sourcesContent":["const URL = \"https://pokeapi.co/api/v2/pokemon\";\n\nexport const getPokemons = () => {\n  return fetch(URL).then((response) => response.json());\n};\n\nexport const getMorePokemons = (offset) => {\n  return fetch(`${URL}?offset=${offset}&limit=20`).then((response) =>\n    response.json()\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst PokemonCard = (props) => {\n  return (\n    <NavLink className=\"card\" to={{ pathname: `/pokemon/${props.name}` }}>\n      <h3 className=\"card__title\">{props.name}</h3>\n      <img\n        className=\"card__img\"\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${props.id}.png`}\n        alt=\"pokemon img\"\n      ></img>\n    </NavLink>\n  );\n};\n\nexport default PokemonCard;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <>\n      <h1 className=\"primary-heading\">Personal Pokedex</h1>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { getPokemons, getMorePokemons } from \"../services/pokemons\";\nimport PokemonCard from \"../components/PokemonCard\";\nimport Header from \"../components/Header\";\n\nconst AllPokemon = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [count, setCount] = useState(1);\n\n  useEffect(() => {\n    getPokemons().then((data) => {\n      setPokemons(data);\n    });\n  }, []);\n\n  const morePokemons = () => {\n    getMorePokemons(count + 19).then((data) => {\n      setPokemons(data);\n      setCount((prevCount) => {\n        return prevCount + 20;\n      });\n    });\n  };\n\n  const lessPokemons = () => {\n    getMorePokemons(count - 21).then((data) => {\n      setPokemons(data);\n      setCount((prevCount) => {\n        return prevCount - 20;\n      });\n    });\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"cards\">\n        {Object.entries(pokemons)[3] &&\n          Object.entries(pokemons)[3][1].map((pokemon, index) => {\n            return <PokemonCard key={index} id={index + count} {...pokemon} />;\n          })}\n      </div>\n      <div className=\"footer\">\n        <div className=\"btn\" onClick={lessPokemons}>\n          <h3 className=\"btn__text\">Back</h3>\n        </div>\n        <div className=\"btn\" onClick={morePokemons}>\n          <h3 className=\"btn__text\">Next</h3>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AllPokemon;\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getPokemon } from \"../services/pokemon\";\n\nconst Pokemon = () => {\n  const location = useLocation();\n  const [currPokemon, setCurrPokemon] = useState([]);\n\n  useEffect(() => {\n    getPokemon(location.pathname).then((data) => {\n      setCurrPokemon(data);\n    });\n  }, []);\n\n  const { id, name, height, base_experience, weight } = currPokemon;\n\n  return (\n    <div>\n      <h2>{name}</h2>\n      <img\n        className=\"card__img\"\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}\n        alt=\"pokemon-pic\"\n      />\n      <ul>\n        <li>Height: {height}</li>\n        <li>Weight: {weight}</li>\n        <li>Base XP:{base_experience}</li>\n      </ul>\n      <ul>\n        Abilities:\n        {currPokemon.abilities &&\n          currPokemon.abilities.map((ability, index) => {\n            return <li key={index}>{ability[\"ability\"][\"name\"]}</li>;\n          })}\n      </ul>\n      <ul>\n        Stats:\n        {currPokemon.stats &&\n          currPokemon.stats.map((stat, index) => {\n            return (\n              <li key={index}>\n                {stat[\"stat\"][\"name\"]}:<span>{stat.base_stat}</span>\n              </li>\n            );\n          })}\n      </ul>\n      <ul>\n        Types:\n        {currPokemon.types &&\n          currPokemon.types.map((type, index) => {\n            return <li key={index}>{type[\"type\"][\"name\"]}</li>;\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Pokemon;\n","const URL = \"https://pokeapi.co/api/v2\";\n\nexport const getPokemon = (pathname) => {\n  return fetch(`${URL}${pathname}`).then((response) => response.json());\n};\n","import AllPokemon from \"./containers/AllPokemon\";\nimport Pokemon from \"./components/Pokemon\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/pokemon/:id\" element={<Pokemon />} />\n          <Route exact path=\"/pokedex\" element={<AllPokemon />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}